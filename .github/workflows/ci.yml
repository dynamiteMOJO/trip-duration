name: CI Pipeline

on:
  push:

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-gcr-image:
    name: Push to GCR
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build, tag, and push image to GCR
        uses: RafikFarhad/push-to-gcr-github-action@v5-rc1
        with:
          gcloud_service_key: "${{ secrets.GCP_SECRET }}"
          registry: gcr.io
          project_id: tradeindia-ai
          image_name: trip-duration-by-push-to-gcr-2
          image_tag: latest
          dockerfile: ./test/Dockerfile.test
          context: ./test
          target: build
  
  # Continuous-Deployment:
  #   runs-on: self-hosted
  #   needs: build-and-push-ecr-image
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2
      
  #     - name: Pull latest images
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
  #         IMAGE_TAG: latest
  #       run: |
  #         docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
  #     - name: Delete Previous Container
  #       run: |
  #         docker rm -f trip-duration || true

  #     - name: Run Docker Image to serve users
  #       run: |
  #         docker run -d -p 8080:8080 --ipc="host" --name=trip-duration -e 'AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_REGION=${{ secrets.AWS_REGION }}'  ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest
      